# -*- coding: utf-8 -*-
"""CodSoft - Spam SMS Detection - Web Application.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13SAQvPT-fnK9Od8bipLbnzpWzyKTUzw_
"""

import streamlit as st
import pickle
from sklearn.feature_extraction.text import CountVectorizer

# Load the model
model = pickle.load(open('Model.pkl', 'rb'))
vectorizer = pickle.load(open('Vectorizer.pkl', 'rb'))

def Ham_or_Spam(message):
    # Vectorize the new message using the same vectorizer used during training
    message = vectorizer.transform([message])
    # Make a prediction
    prediction = model.predict(message)
    # Map the predicted label back to the original label (ham or spam)
    return prediction

def main():
    st.title("Spam SMS Detection")

    message = st.text_input("Message", "Drop your message here.")

    safe_html="""
      <div style="background-color:#F4D03F;padding:10px >
       <h2 style="color:white;text-align:center;">Safe Message</h2>
       </div>
    """
    danger_html="""
      <div style="background-color:#F08080;padding:10px >
       <h2 style="color:black ;text-align:center;"> Spam!!</h2>
       </div>
    """

    if st.button("Predict"):
        output = Ham_or_Spam(message)

        if output == 1:
            st.markdown(danger_html,unsafe_allow_html=True)
        else:
            st.markdown(safe_html,unsafe_allow_html=True)

if __name__ == "__main__":
    main()